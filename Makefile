#############################################################################
# Makefile for building: HW5
# Generated by qmake (2.01a) (Qt 4.6.2) on: Thu Apr 19 00:19:58 2012
# Project:  HW5.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile HW5.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = game.cpp \
		char.cpp \
		enemy.cpp \
		target.cpp \
		health.cpp \
		item.cpp \
		boss.cpp \
		acid.cpp \
		bullet.cpp \
		projectile.cpp \
		missile.cpp \
		turret.cpp \
		dog.cpp \
		main.cpp moc_game.cpp
OBJECTS       = game.o \
		char.o \
		enemy.o \
		target.o \
		health.o \
		item.o \
		boss.o \
		acid.o \
		bullet.o \
		projectile.o \
		missile.o \
		turret.o \
		dog.o \
		main.o \
		moc_game.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		HW5.pro
QMAKE_TARGET  = HW5
DESTDIR       = 
TARGET        = HW5

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: HW5.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile HW5.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile HW5.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/HW51.0.0 || $(MKDIR) .tmp/HW51.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/HW51.0.0/ && $(COPY_FILE) --parents game.h char.h enemy.h boss.h target.h health.h item.h acid.h bullet.h projectile.h missile.h turret.h dog.h .tmp/HW51.0.0/ && $(COPY_FILE) --parents game.cpp char.cpp enemy.cpp target.cpp health.cpp item.cpp boss.cpp acid.cpp bullet.cpp projectile.cpp missile.cpp turret.cpp dog.cpp main.cpp .tmp/HW51.0.0/ && (cd `dirname .tmp/HW51.0.0` && $(TAR) HW51.0.0.tar HW51.0.0 && $(COMPRESS) HW51.0.0.tar) && $(MOVE) `dirname .tmp/HW51.0.0`/HW51.0.0.tar.gz . && $(DEL_FILE) -r .tmp/HW51.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_game.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_game.cpp
moc_game.cpp: enemy.h \
		char.h \
		target.h \
		item.h \
		boss.h \
		bullet.h \
		projectile.h \
		acid.h \
		health.h \
		missile.h \
		turret.h \
		dog.h \
		game.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) game.h -o moc_game.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

game.o: game.cpp game.h \
		enemy.h \
		char.h \
		target.h \
		item.h \
		boss.h \
		bullet.h \
		projectile.h \
		acid.h \
		health.h \
		missile.h \
		turret.h \
		dog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o game.o game.cpp

char.o: char.cpp char.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o char.o char.cpp

enemy.o: enemy.cpp enemy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o enemy.o enemy.cpp

target.o: target.cpp target.h \
		item.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o target.o target.cpp

health.o: health.cpp health.h \
		item.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o health.o health.cpp

item.o: item.cpp item.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o item.o item.cpp

boss.o: boss.cpp boss.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o boss.o boss.cpp

acid.o: acid.cpp acid.h \
		projectile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o acid.o acid.cpp

bullet.o: bullet.cpp bullet.h \
		projectile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bullet.o bullet.cpp

projectile.o: projectile.cpp projectile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o projectile.o projectile.cpp

missile.o: missile.cpp missile.h \
		projectile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o missile.o missile.cpp

turret.o: turret.cpp turret.h \
		item.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o turret.o turret.cpp

dog.o: dog.cpp dog.h \
		projectile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dog.o dog.cpp

main.o: main.cpp game.h \
		enemy.h \
		char.h \
		target.h \
		item.h \
		boss.h \
		bullet.h \
		projectile.h \
		acid.h \
		health.h \
		missile.h \
		turret.h \
		dog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

moc_game.o: moc_game.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_game.o moc_game.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

